name: Testing

on:
  push:
    branches:
      - "*"
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/testing.yml"
      - "Makefile"
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/testing.yml"
      - "Makefile"
  workflow_dispatch:

permissions: write-all

jobs:
  testing:
    name: Testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go: [ "1.13", "1.14", "1.15", "1.16", "1.17", "1.18" ]
    steps:
    - name: Set up Go ${{ matrix.go }}.x
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go }}

    - name: Set up IPFS
      uses: ibnesayeed/setup-ipfs@master
      with:
        run_daemon: true

    - name: Check out code base
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check out code base
      if: github.event_name == 'pull_request'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Cache go module
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Run test
      env:
        IPFS_PINNER_PINATA_API_KEY: ${{ secrets.IPFS_PINNER_PINATA_API_KEY }}
        IPFS_PINNER_PINATA_SECRET_API_KEY: ${{ secrets.IPFS_PINNER_PINATA_SECRET_API_KEY }}
      run: |
        make test
        make test-cover

    - name: Upload coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.os }}
        path: coverage.*

    - name: Run integration test
      env:
        IPFS_PINNER_PINATA_API_KEY: ${{ secrets.IPFS_PINNER_PINATA_API_KEY }}
        IPFS_PINNER_PINATA_SECRET_API_KEY: ${{ secrets.IPFS_PINNER_PINATA_SECRET_API_KEY }}
      run: make test-integration
